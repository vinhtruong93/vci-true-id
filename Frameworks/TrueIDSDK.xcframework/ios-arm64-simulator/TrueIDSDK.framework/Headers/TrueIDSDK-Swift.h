#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
#ifndef TRUEIDSDK_SWIFT_H
#define TRUEIDSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreFoundation;
@import Foundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="TrueIDSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class CAShapeLayer;
@class NSCoder;

SWIFT_CLASS("_TtC9TrueIDSDK13ASSpinnerView")
@interface ASSpinnerView : UIView
@property (nonatomic, readonly, strong) CAShapeLayer * _Nonnull layer;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
- (void)layoutSubviews;
- (void)didMoveToWindow;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end

@class Person;
@class UIImage;
@class NSString;
enum DetectionType : NSInteger;
@class CheckingRecord;

SWIFT_CLASS("_TtC9TrueIDSDK8CardInfo")
@interface CardInfo : NSObject
@property (nonatomic, strong) Person * _Nullable person;
@property (nonatomic, strong) UIImage * _Nullable frontCardImage;
@property (nonatomic, strong) UIImage * _Nullable backCardImage;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable result;
- (CheckingRecord * _Nullable)getRecordWithType:(enum DetectionType)type SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, id> * _Nonnull)toMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9TrueIDSDK14CheckingRecord")
@interface CheckingRecord : NSObject
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull message;
@property (nonatomic) enum DetectionType type;
@property (nonatomic) BOOL status;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9TrueIDSDK14ConfigEndPoint")
@interface ConfigEndPoint : NSObject
@property (nonatomic, copy) NSString * _Nonnull front;
@property (nonatomic, copy) NSString * _Nonnull back;
@property (nonatomic, copy) NSString * _Nonnull selfie;
@property (nonatomic, copy) NSString * _Nonnull complete;
@property (nonatomic, copy) NSString * _Nonnull nfcqrverify;
@property (nonatomic, copy) NSString * _Nonnull nfcrar;
@property (nonatomic, copy) NSString * _Nonnull ocr;
@property (nonatomic, copy) NSString * _Nonnull nfcbshield;
@property (nonatomic, copy) NSString * _Nonnull createrequest;
@property (nonatomic, copy) NSString * _Nonnull accesstoken;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9TrueIDSDK10ConfigInfo")
@interface ConfigInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull domain;
@property (nonatomic, copy) NSString * _Nonnull appId;
@property (nonatomic, copy) NSString * _Nonnull appSecret;
@property (nonatomic, copy) NSString * _Nonnull zoomLicenseKey;
@property (nonatomic, copy) NSString * _Nonnull zoomServerBaseURL;
@property (nonatomic, copy) NSString * _Nonnull zoomPublicKey;
@property (nonatomic, copy) NSString * _Nonnull zoomAuthURL;
@property (nonatomic, copy) NSString * _Nonnull zoomClient;
@property (nonatomic, copy) NSString * _Nonnull accessToken;
@property (nonatomic, copy) NSString * _Nonnull configHeader;
- (nonnull instancetype)initWithDomain:(NSString * _Nonnull)domain configEndPoint:(ConfigEndPoint * _Nonnull)configEndPoint appId:(NSString * _Nonnull)appId appSecret:(NSString * _Nonnull)appSecret zoomLicenseKey:(NSString * _Nonnull)zoomLicenseKey zoomServerBaseURL:(NSString * _Nonnull)zoomServerBaseURL zoomPublicKey:(NSString * _Nonnull)zoomPublicKey zoomAuthURL:(NSString * _Nonnull)zoomAuthURL zoomClient:(NSString * _Nonnull)zoomClient accessToken:(NSString * _Nonnull)accessToken configHeader:(NSString * _Nonnull)configHeader OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9TrueIDSDK8ConfigUI")
@interface ConfigUI : NSObject
@property (nonatomic, copy) NSString * _Nonnull primaryColor;
@property (nonatomic, copy) NSString * _Nonnull secondaryColor;
@property (nonatomic, copy) NSString * _Nonnull titleColor;
@property (nonatomic, copy) NSString * _Nonnull backgroundColor;
@property (nonatomic, copy) NSString * _Nonnull textColor;
@property (nonatomic, copy) NSString * _Nonnull textButtonColor;
@property (nonatomic, copy) NSString * _Nonnull borderInputColor;
@property (nonatomic, copy) NSString * _Nonnull errorColor;
@property (nonatomic, copy) NSString * _Nonnull closeColor;
@property (nonatomic, copy) NSString * _Nonnull stepBarColor;
@property (nonatomic, copy) NSString * _Nonnull stepBarBackgroundColor;
@property (nonatomic, copy) NSString * _Nonnull fontName;
@property (nonatomic) NSInteger borderRadius;
@property (nonatomic) NSInteger defaultSpacing;
@property (nonatomic) BOOL imageConfirmation;
@property (nonatomic, copy) NSString * _Nonnull livenessType;
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull stepVerification;
@property (nonatomic) BOOL allowEditOcr;
@property (nonatomic) BOOL isShowStepBar;
@property (nonatomic) BOOL idGuide;
@property (nonatomic) BOOL isDisableSecurity;
@property (nonatomic) BOOL hasInstroctions;
@property (nonatomic) BOOL isManualSelfie;
@property (nonatomic) BOOL isShowSkipNFC;
@property (nonatomic) BOOL trueidWatermark;
@property (nonatomic) BOOL positionBackInitCamera;
@property (nonatomic, copy) NSString * _Nonnull outerBackgroundColorFaceTec;
@property (nonatomic, copy) NSString * _Nonnull frameColorFaceTec;
@property (nonatomic, copy) NSString * _Nonnull borderColorFaceTec;
@property (nonatomic, copy) NSString * _Nonnull ovalColorFaceTec;
@property (nonatomic, copy) NSString * _Nonnull dualSpinnerColorFaceTec;
@property (nonatomic, copy) NSString * _Nonnull textColorFaceTec;
@property (nonatomic, copy) NSString * _Nonnull buttonAndFeedbackBarColorFaceTec;
@property (nonatomic, copy) NSString * _Nonnull buttonAndFeedbackBarTextColorFaceTec;
@property (nonatomic, copy) NSString * _Nonnull buttonColorPressedFaceTec;
@property (nonatomic) NSInteger maxRetry;
@property (nonatomic) NSInteger maxRetryFront;
@property (nonatomic) NSInteger maxRetryBack;
@property (nonatomic) NSInteger maxRetrySelfie;
@property (nonatomic) NSInteger maxRetryNFC;
- (nonnull instancetype)initWithJsonString:(NSString * _Nonnull)jsonString;
- (nonnull instancetype)initWithPrimaryColor:(NSString * _Nonnull)primaryColor secondaryColor:(NSString * _Nonnull)secondaryColor titleColor:(NSString * _Nonnull)titleColor backgroundColor:(NSString * _Nonnull)backgroundColor textColor:(NSString * _Nonnull)textColor textButtonColor:(NSString * _Nonnull)textButtonColor borderInputColor:(NSString * _Nonnull)borderInputColor errorColor:(NSString * _Nonnull)errorColor closeColor:(NSString * _Nonnull)closeColor stepBarColor:(NSString * _Nonnull)stepBarColor stepBarBackgroundColor:(NSString * _Nonnull)stepBarBackgroundColor fontName:(NSString * _Nonnull)fontName borderRadius:(NSInteger)borderRadius defaultSpacing:(NSInteger)defaultSpacing maxRetry:(NSInteger)maxRetry maxRetryFront:(NSInteger)maxRetryFront maxRetryBack:(NSInteger)maxRetryBack maxRetrySelfie:(NSInteger)maxRetrySelfie maxRetryNFC:(NSInteger)maxRetryNFC livenessType:(NSString * _Nonnull)livenessType imageConfirmation:(BOOL)imageConfirmation trueidWatermark:(BOOL)trueidWatermark allowEditOcr:(BOOL)allowEditOcr isShowStepBar:(BOOL)isShowStepBar idGuide:(BOOL)idGuide hasInstroctions:(BOOL)hasInstroctions isManualSelfie:(BOOL)isManualSelfie isShowSkipNFC:(BOOL)isShowSkipNFC positionBackInitCamera:(BOOL)positionBackInitCamera isDisableSecurity:(BOOL)isDisableSecurity stepVerification:(NSArray<NSString *> * _Nonnull)stepVerification outerBackgroundColorFaceTec:(NSString * _Nonnull)outerBackgroundColorFaceTec frameColorFaceTec:(NSString * _Nonnull)frameColorFaceTec borderColorFaceTec:(NSString * _Nonnull)borderColorFaceTec ovalColorFaceTec:(NSString * _Nonnull)ovalColorFaceTec dualSpinnerColorFaceTec:(NSString * _Nonnull)dualSpinnerColorFaceTec textColorFaceTec:(NSString * _Nonnull)textColorFaceTec buttonAndFeedbackBarColorFaceTec:(NSString * _Nonnull)buttonAndFeedbackBarColorFaceTec buttonAndFeedbackBarTextColorFaceTec:(NSString * _Nonnull)buttonAndFeedbackBarTextColorFaceTec buttonColorPressedFaceTec:(NSString * _Nonnull)buttonColorPressedFaceTec OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSNumber;

SWIFT_CLASS("_TtC9TrueIDSDK8Decision")
@interface Decision : NSObject
@property (nonatomic, strong) NSNumber * _Nullable code;
@property (nonatomic, copy) NSString * _Nullable decision;
- (NSDictionary<NSString *, id> * _Nonnull)toMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9TrueIDSDK13DetailAddress")
@interface DetailAddress : NSObject
@property (nonatomic, copy) NSString * _Nonnull code;
@property (nonatomic, copy) NSString * _Nonnull value;
- (NSDictionary<NSString *, id> * _Nonnull)toMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DetectionType, open) {
  DetectionTypeOcrScan = 0,
  DetectionTypeLivenessDetection = 1,
  DetectionTypeFaceComparision = 2,
  DetectionTypeIdVerification = 3,
};


SWIFT_CLASS("_TtC9TrueIDSDK3EID")
@interface EID : NSObject
@property (nonatomic, copy) NSString * _Nonnull eidQRText;
@property (nonatomic, copy) NSString * _Nonnull eidMRZ;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC9TrueIDSDK12FaceMatching")
@interface FaceMatching : NSObject
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable stringValue;
@property (nonatomic, strong) NSNumber * _Nullable similarity;
@property (nonatomic, strong) NSNumber * _Nullable confidenceLevel;
- (NSDictionary<NSString *, id> * _Nonnull)toMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NSData;

SWIFT_CLASS("_TtC9TrueIDSDK13KeyChainStore")
@interface KeyChainStore : NSObject
+ (NSString * _Nullable)stringForKey:(NSString * _Nullable)forKey SWIFT_WARN_UNUSED_RESULT;
+ (void)setWithString:(NSString * _Nullable)string forKey:(NSString * _Nullable)forKey;
+ (void)removeForKey:(NSString * _Nullable)forKey;
+ (NSData * _Nullable)dataForKey:(NSString * _Nullable)forKey SWIFT_WARN_UNUSED_RESULT;
+ (void)setWithData:(NSData * _Nullable)data forKey:(NSString * _Nullable)forKey;
+ (void)removeAllItems;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@interface KeyChainStore (SWIFT_EXTENSION(TrueIDSDK))
+ (void)migrateData;
@end


@interface KeyChainStore (SWIFT_EXTENSION(TrueIDSDK))
+ (void)testMigrate;
@end

typedef SWIFT_ENUM(NSInteger, LivenessDetectionMode, open) {
  LivenessDetectionModeNone = 0,
  LivenessDetectionModeActive = 1,
  LivenessDetectionModePassLiveness = 2,
  LivenessDetectionModePassive = 3,
};


SWIFT_CLASS_NAMED("MRZParser")
@interface MRZParser : NSObject
@property (nonatomic, copy) NSString * _Nonnull parsedMRZ;
- (nonnull instancetype)initWithScan:(NSString * _Nonnull)scan debug:(BOOL)debug OBJC_DESIGNATED_INITIALIZER;
- (NSDictionary<NSString *, id> * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSDate;

SWIFT_CLASS_NAMED("MRZTD1")
@interface MRZTD1 : MRZParser
/// The document type from the 1st line of the MRZ. (start 1, len 1)
@property (nonatomic, copy) NSString * _Nonnull documentType;
/// The document sub type from the 1st line of the MRZ. (start 2, len 1)
@property (nonatomic, copy) NSString * _Nonnull documentSubType;
/// The country code from the 1st line of the MRZ (start 3, len 3)
@property (nonatomic, copy) NSString * _Nonnull countryCode;
/// The passport number from the 1nd line of the MRZ. (start 6, len 9)
@property (nonatomic, copy) NSString * _Nonnull passportNumber;
/// The date of birth from the 2nd line of the MRZ (start 1, len 6)
@property (nonatomic, copy) NSDate * _Nullable dateOfBirth;
/// The sex from the 2nd line of the MRZ. (start 8, len 1)
@property (nonatomic, copy) NSString * _Nonnull sex;
/// The expiration date from the 2nd line of the MRZ. (start 9, len 6)
@property (nonatomic, copy) NSDate * _Nullable expirationDate;
/// The nationality from the 2nd line of the MRZ. (start 16, len 3)
@property (nonatomic, copy) NSString * _Nonnull nationality;
/// The last name from the 1st line of the MRZ (start 1, len 30, until first <<)
@property (nonatomic, copy) NSString * _Nonnull lastName;
/// The firstname from the 1st line of the MRZ (start first << len 30)
@property (nonatomic, copy) NSString * _Nonnull firstName;
/// Convenience method for getting all data in a dictionary
/// :returns: Return all fields in a dictionary
- (NSDictionary<NSString *, id> * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
/// Get the description of the MRZ
/// :returns: a string with all fields plus field name (each field on a new line)
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Initiate the MRZ object with the scanned data.
/// :param: scan  the scanned string
/// :param: debug true if you want to see debug messages.
/// :returns: Instance of MRZ
- (nonnull instancetype)initWithScan:(NSString * _Nonnull)scan debug:(BOOL)debug OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("MRZTD3")
@interface MRZTD3 : MRZParser
/// The document type from the 1st line of the MRZ. (start 1, len 1)
@property (nonatomic, copy) NSString * _Nonnull documentType;
/// The document sub type from the 1st line of the MRZ. (start 2, len 1)
@property (nonatomic, copy) NSString * _Nonnull documentSubType;
/// The country code from the 1st line of the MRZ (start 3, len 3)
@property (nonatomic, copy) NSString * _Nonnull countryCode;
/// The last name from the 1st line of the MRZ (start 6, len 39, until first <<)
@property (nonatomic, copy) NSString * _Nonnull lastName;
/// The firstname from the 1st line of the MRZ (start 6, len 39, after first <<)
@property (nonatomic, copy) NSString * _Nonnull firstName;
/// The passport number from the 2nd line of the MRZ. (start 1, len 9)
@property (nonatomic, copy) NSString * _Nonnull passportNumber;
/// The nationality from the 2nd line of the MRZ. (start 11, len 3)
@property (nonatomic, copy) NSString * _Nonnull nationality;
/// The date of birth from the 2nd line of the MRZ (start 14, len 6)
@property (nonatomic, copy) NSDate * _Nullable dateOfBirth;
/// The sex from the 2nd line of the MRZ. (start 21, len 1)
@property (nonatomic, copy) NSString * _Nonnull sex;
/// The expiration date from the 2nd line of the MRZ. (start 22, len 6)
@property (nonatomic, copy) NSDate * _Nullable expirationDate;
/// The personal number from the 2nd line of the MRZ. (start 29, len 14
@property (nonatomic, copy) NSString * _Nonnull personalNumber;
/// Convenience method for getting all data in a dictionary
/// :returns: Return all fields in a dictionary
- (NSDictionary<NSString *, id> * _Nonnull)data SWIFT_WARN_UNUSED_RESULT;
/// Get the description of the MRZ
/// :returns: a string with all fields plus field name (each field on a new line)
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
/// Initiate the MRZ object with the scanned data.
/// :param: scan  the scanned string
/// :param: debug true if you want to see debug messages.
/// :returns: Instance of MRZ
- (nonnull instancetype)initWithScan:(NSString * _Nonnull)scan debug:(BOOL)debug OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, NFCStatus, open) {
  NFCStatusIgnored = 0,
  NFCStatusSuccess = 1,
  NFCStatusFakeDetected = 2,
  NFCStatusDecryptionFailed = 3,
};


SWIFT_CLASS("_TtC9TrueIDSDK7NfcInfo")
@interface NfcInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull idNumber;
@property (nonatomic, copy) NSString * _Nonnull gender;
@property (nonatomic, copy) NSString * _Nonnull dob;
@property (nonatomic, copy) NSString * _Nonnull fullname;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic, copy) NSString * _Nonnull doi;
@property (nonatomic, copy) NSString * _Nonnull givenPlace;
@property (nonatomic, copy) NSString * _Nonnull origin;
@property (nonatomic, copy) NSString * _Nonnull dueDate;
@property (nonatomic, copy) NSString * _Nonnull photo;
@property (nonatomic, copy) NSString * _Nonnull mrz;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9TrueIDSDK10NfcRarInfo")
@interface NfcRarInfo : NSObject
@property (nonatomic, copy) NSString * _Nonnull faceImage;
@property (nonatomic, copy) NSString * _Nonnull cardNumber;
@property (nonatomic, copy) NSString * _Nonnull dateOfBirth;
@property (nonatomic, copy) NSString * _Nonnull issueDate;
@property (nonatomic, copy) NSString * _Nonnull previousNumber;
@property (nonatomic, copy) NSString * _Nonnull name;
@property (nonatomic, copy) NSString * _Nonnull sex;
@property (nonatomic, copy) NSString * _Nonnull nationality;
@property (nonatomic, copy) NSString * _Nonnull nation;
@property (nonatomic, copy) NSString * _Nonnull religion;
@property (nonatomic, copy) NSString * _Nonnull hometown;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic, copy) NSString * _Nonnull character;
@property (nonatomic, copy) NSString * _Nonnull expiredDate;
@property (nonatomic, copy) NSString * _Nonnull fatherName;
@property (nonatomic, copy) NSString * _Nonnull motherName;
@property (nonatomic, copy) NSString * _Nonnull mrz;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9TrueIDSDK9NfcResult")
@interface NfcResult : NSObject
@property (nonatomic, strong) NfcRarInfo * _Nonnull nfcInfo;
@property (nonatomic, strong) NSNumber * _Nonnull code;
@property (nonatomic, copy) NSString * _Nonnull errorMesssage;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9TrueIDSDK14PassportReader") SWIFT_AVAILABILITY(ios,introduced=13)
@interface PassportReader : NSObject
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end




SWIFT_CLASS("_TtC9TrueIDSDK6Person")
@interface Person : NSObject
@property (nonatomic, copy) NSString * _Nonnull idNumber;
@property (nonatomic, copy) NSString * _Nonnull gender;
@property (nonatomic, copy) NSString * _Nonnull dob;
@property (nonatomic, copy) NSString * _Nonnull fullname;
@property (nonatomic, copy) NSString * _Nonnull address;
@property (nonatomic, copy) NSString * _Nonnull doi;
@property (nonatomic, copy) NSString * _Nonnull givenPlace;
@property (nonatomic, copy) NSString * _Nonnull origin;
@property (nonatomic, copy) NSString * _Nonnull dueDate;
@property (nonatomic, copy) NSString * _Nonnull idType;
@property (nonatomic, copy) NSString * _Nonnull qrcode;
@property (nonatomic) NSInteger idTypeCode;
@property (nonatomic, strong) DetailAddress * _Nonnull idOriginProvince;
@property (nonatomic, strong) DetailAddress * _Nonnull idOriginDistrict;
@property (nonatomic, strong) DetailAddress * _Nonnull idOriginWard;
@property (nonatomic, strong) DetailAddress * _Nonnull idAddressProvince;
@property (nonatomic, strong) DetailAddress * _Nonnull idAddressDistrict;
@property (nonatomic, strong) DetailAddress * _Nonnull idAddressWard;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC9TrueIDSDK8RawImage")
@interface RawImage : NSObject
@property (nonatomic, copy) NSString * _Nullable front;
@property (nonatomic, copy) NSString * _Nullable back;
@property (nonatomic, copy) NSString * _Nullable selfie;
- (NSDictionary<NSString *, id> * _Nonnull)toMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class VerificationResult;

SWIFT_CLASS("_TtC9TrueIDSDK6TrueID")
@interface TrueID : NSObject
+ (void)configureWithConfigInfo:(ConfigInfo * _Nonnull)configInfo configUI:(ConfigUI * _Nonnull)configUI;
+ (void)startWithListener:(void (^ _Nonnull)(VerificationResult * _Nonnull))listener;
+ (NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)accessToken SWIFT_WARN_UNUSED_RESULT;
+ (NSInteger)getRetryCounter SWIFT_WARN_UNUSED_RESULT;
+ (void)setLanguageWithLanguage:(NSString * _Nonnull)language;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end








@interface UIDevice (SWIFT_EXTENSION(TrueIDSDK))
+ (NSString * _Nonnull)zmDeviceUUID SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)getFirstStart SWIFT_WARN_UNUSED_RESULT;
+ (NSString * _Nonnull)currentAppVersion SWIFT_WARN_UNUSED_RESULT;
@end













SWIFT_CLASS("_TtC9TrueIDSDK18VerificationResult")
@interface VerificationResult : NSObject
@property (nonatomic, strong) NSNumber * _Nonnull code;
@property (nonatomic, copy) NSString * _Nonnull errorMessage;
@property (nonatomic, copy) NSString * _Nullable clientId;
@property (nonatomic, copy) NSString * _Nullable requestId;
@property (nonatomic, strong) Decision * _Nullable decision;
@property (nonatomic, strong) FaceMatching * _Nullable faceMatching;
@property (nonatomic, strong) Person * _Nullable idInfo;
@property (nonatomic, strong) NfcInfo * _Nullable nfcInfo;
@property (nonatomic, strong) NfcRarInfo * _Nullable nfcRarInfo;
@property (nonatomic) BOOL livenessCheck;
@property (nonatomic) enum NFCStatus nfcStatus;
@property (nonatomic, strong) RawImage * _Nullable rawImage;
@property (nonatomic, copy) NSDictionary<NSString *, id> * _Nullable ekycResult;
- (NSDictionary<NSString *, id> * _Nonnull)toMap SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, typeProcessCheck, open) {
  typeProcessCheckOcr = 0,
  typeProcessCheckFacematching = 1,
  typeProcessCheckLiveness = 2,
  typeProcessCheckFinished = 3,
};

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
